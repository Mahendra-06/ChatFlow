import React, { useState } from "react";
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Hash, Palette } from "lucide-react";

export default function CreateRoomDialog({ open, onClose, onCreateRoom }) {
  const [formData, setFormData] = useState({
    name: "",
    description: "",
    color: "blue",
    is_private: false
  });

  const colorOptions = [
    { value: "blue", label: "Ocean Blue", bg: "from-blue-400 to-blue-600" },
    { value: "purple", label: "Royal Purple", bg: "from-purple-400 to-purple-600" },
    { value: "green", label: "Forest Green", bg: "from-green-400 to-green-600" },
    { value: "orange", label: "Sunset Orange", bg: "from-orange-400 to-orange-600" },
    { value: "pink", label: "Cherry Pink", bg: "from-pink-400 to-pink-600" }
  ];

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!formData.name.trim()) return;

    await onCreateRoom(formData);
    setFormData({ name: "", description: "", color: "blue", is_private: false });
  };

  const handleClose = () => {
    setFormData({ name: "", description: "", color: "blue", is_private: false });
    onClose();
  };

  return (
    <Dialog open={open} onOpenChange={handleClose}>
      <DialogContent className="sm:max-w-md bg-white/95 backdrop-blur-sm">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2 text-xl">
            <Hash className="w-5 h-5 text-blue-500" />
            Create New Chat Room
          </DialogTitle>
        </DialogHeader>
        
        <form onSubmit={handleSubmit} className="space-y-6 mt-4">
          <div className="space-y-2">
            <Label htmlFor="name">Room Name *</Label>
            <Input
              id="name"
              placeholder="Enter room name..."
              value={formData.name}
              onChange={(e) => setFormData({ ...formData, name: e.target.value })}
              className="bg-white/60"
            />
          </div>
          
          <div className="space-y-2">
            <Label htmlFor="description">Description</Label>
            <Textarea
              id="description"
              placeholder="What's this room about? (optional)"
              value={formData.description}
              onChange={(e) => setFormData({ ...formData, description: e.target.value })}
              className="bg-white/60 resize-none h-20"
            />
          </div>

          <div className="space-y-3">
            <Label className="flex items-center gap-2">
              <Palette className="w-4 h-4" />
              Room Color Theme
            </Label>
            <div className="grid grid-cols-5 gap-3">
              {colorOptions.map((color) => (
                <button
                  key={color.value}
                  type="button"
                  onClick={() => setFormData({ ...formData, color: color.value })}
                  className={`relative w-full h-12 bg-gradient-to-r ${color.bg} rounded-lg shadow-md hover:shadow-lg transition-all duration-200 ${
                    formData.color === color.value ? 'ring-2 ring-slate-400 ring-offset-2' : ''
                  }`}
                >
                  {formData.color === color.value && (
                    <div className="absolute inset-0 bg-white/20 rounded-lg"></div>
                  )}
                </button>
              ))}
            </div>
            <p className="text-xs text-slate-500 text-center">
              Selected: {colorOptions.find(c => c.value === formData.color)?.label}
            </p>
          </div>

          <div className="flex gap-3 pt-4">
            <Button
              type="button"
              variant="outline"
              onClick={handleClose}
              className="flex-1"
            >
              Cancel
            </Button>
            <Button
              type="submit"
              disabled={!formData.name.trim()}
              className="flex-1 bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700"
            >
              Create Room
            </Button>
          </div>
        </form>
      </DialogContent>
    </Dialog>
  );
}